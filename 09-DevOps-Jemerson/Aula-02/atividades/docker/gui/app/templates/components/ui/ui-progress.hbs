<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
	<g stroke-linecap="round" stroke-linejoin="round" stroke-width="2" fill="#111111" stroke="#111111">
		<g class="nc-loop_dots-05-32">
			<circle data-color="color-2" fill="none" stroke-miterlimit="10" cx="16" cy="16" r="3"
				transform="translate(0 3.364000000001397)"></circle>
			<circle fill="none" stroke="#111111" stroke-miterlimit="10" cx="4" cy="16" r="3"
				transform="translate(0 5.364000000001397)"></circle>
			<circle fill="none" stroke="#111111" stroke-miterlimit="10" cx="28" cy="16" r="3"
				transform="translate(0 1.364000000001397)"></circle>
		</g>
		<script>!function () { function t(t) { this.element = t, this.dots = [this.element.getElementsByTagName("circle")[1], this.element.getElementsByTagName("circle")[0], this.element.getElementsByTagName("circle")[2]], this.animationId, this.start = null, this.init() } if (!window.requestAnimationFrame) { var i = null; window.requestAnimationFrame = function (t, n) { var e = (new Date).getTime(); i || (i = e); var a = Math.max(0, 16 - (e - i)), o = window.setTimeout(function () { t(e + a) }, a); return i = e + a, o } } t.prototype.init = function () { var t = this; this.animationId = window.requestAnimationFrame(t.triggerAnimation.bind(t)) }, t.prototype.reset = function () { var t = this; window.cancelAnimationFrame(t.animationId) }, t.prototype.triggerAnimation = function (t) { var i = this; this.start || (this.start = t); var n = t - this.start, e = Math.min(n / 40, 23); 930 > n || (this.start = this.start + 930); for (var a = [], o = 0; 3 > o; o++) { a[o] = Math.max(e - 2 * o, 0); if (a[o] > 8) (a[o] = 16 - a[o]); a[o] = Math.max(a[o], 0), this.dots[o].setAttribute("transform", "translate(0 " + a[o] + ")"); } if (document.documentElement.contains(this.element)) window.requestAnimationFrame(i.triggerAnimation.bind(i)) }; var n = document.getElementsByClassName("nc-loop_dots-05-32"), e = []; if (n) for (var a = 0; n.length > a; a++)!function (i) { e.push(new t(n[i])) }(a); document.addEventListener("visibilitychange", function () { "hidden" == document.visibilityState ? e.forEach(function (t) { t.reset() }) : e.forEach(function (t) { t.init() }) }) }();</script>
	</g>
</svg>
